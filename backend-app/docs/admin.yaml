/admin/add-super-admin/{userId}:
  put:
    summary: add super admin
    description: make a user super admin.
    tags:
      - Admin
    security:
      - bearerAuth: []
    parameters:
      - name: userId
        in: path
        description: ID of the user
        required: true
    responses:
      200:
        description: Success
        content:
          'application/json':
            example:
              status: 'Success'
              message: 'User is now a super admin'
      404:
        $ref: '#/components/responses/404'
      400:
        $ref: '#/components/responses/400'
      403:
        $ref: '#/components/responses/403'
      401:
        $ref: '#/components/responses/401'
/admin/remove-super-admin/{userId}:
  put:
    summary: remove super admin
    description: remove a super admin.
    tags:
      - Admin
    security:
      - bearerAuth: []
    parameters:
      - name: userId
        in: path
        description: ID of the user
        required: true
    responses:
      200:
        description: Success
        content:
          'application/json':
            example:
              status: 'Success'
              message: 'User is no longer a super admin'
      404:
        $ref: '#/components/responses/404'
      400:
        $ref: '#/components/responses/400'
      403:
        $ref: '#/components/responses/403'
      401:
        $ref: '#/components/responses/401'
/admin/add-admin/{userId}:
  put:
    summary: add admin
    description: make a user admin.
    tags:
      - Admin
    security:
      - bearerAuth: []
    parameters:
      - name: userId
        in: path
        description: ID of the user
        required: true
    responses:
      200:
        description: Success
        content:
          'application/json':
            example:
              status: 'Success'
              message: 'User is now an admin'
      404:
        $ref: '#/components/responses/404'
      400:
        $ref: '#/components/responses/400'
      403:
        $ref: '#/components/responses/403'
      401:
        $ref: '#/components/responses/401'
/admin/remove-admin/{userId}:
  put:
    summary: remove admin
    description: remove a admin.
    tags:
      - Admin
    security:
      - bearerAuth: []
    parameters:
      - name: userId
        in: path
        description: ID of the user
        required: true
    responses:
      200:
        description: Success
        content:
          'application/json':
            example:
              status: 'Success'
              message: 'User is no longer an admin'
      404:
        $ref: '#/components/responses/404'
      400:
        $ref: '#/components/responses/400'
      403:
        $ref: '#/components/responses/403'
      401:
        $ref: '#/components/responses/401'
/admin/authorize-or-restrict/{userId}:
  put:
    summary: authorize or restrict
    description: add authorization or restriction to a user.
    tags:
      - Admin
    security:
      - bearerAuth: []
    parameters:
      - name: userId
        in: path
        description: ID of the user
        required: true
    requestBody:
      content:
        'application/json':
          schema:
            properties:
              authorities:
                type: array
              restrictions:
                type: array
            example:
              authorities:
                - 'BAN_USER'
                - 'UPDATE_USER'
              restrictions:
                - 'UPDATE_CALANDER'
    responses:
      200:
        description: Success
        content:
          'application/json':
            example:
              status: 'Success'
              message: 'User authorities and restrictions updated'
      404:
        $ref: '#/components/responses/404'
      400:
        $ref: '#/components/responses/400'
      403:
        $ref: '#/components/responses/403'
      401:
        $ref: '#/components/responses/401'
/admin/ban-user/{userId}:
  put:
    summary: ban user
    description: ban a user.
    tags:
      - Admin
    security:
      - bearerAuth: []
    parameters:
      - name: userId
        in: path
        description: ID of the user
        required: true
    responses:
      200:
        description: Success
        content:
          'application/json':
            example:
              status: 'Success'
              message: 'User is now banned'
      404:
        $ref: '#/components/responses/404'
      400:
        $ref: '#/components/responses/400'
      403:
        $ref: '#/components/responses/403'
      401:
        $ref: '#/components/responses/401'
/admin/unban-user/{userId}:
  put:
    summary: unban user
    description: unban a user.
    tags:
      - Admin
    security:
      - bearerAuth: []
    parameters:
      - name: userId
        in: path
        description: ID of the user
        required: true
    responses:
      200:
        description: Success
        content:
          'application/json':
            example:
              status: 'Success'
              message: 'User is now unbanned'
      404:
        $ref: '#/components/responses/404'
      400:
        $ref: '#/components/responses/400'
      403:
        $ref: '#/components/responses/403'
      401:
        $ref: '#/components/responses/401'
